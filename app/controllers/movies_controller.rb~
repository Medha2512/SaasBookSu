class MoviesController < ApplicationController

  def index
    #The message param allow pages redirecting to the index action to show some text message  at the bottom of the page
    @message = params[:message]
    @movies = Movie.order(params[:sort])
  end

  def show
  	#debugger
    id = params[:id]
    logger.debug("find movie " + params.inspect)
    @movie = Movie.find(id)
  end

  def edit
  	#debugger
    id = params[:id]
    logger.debug("find movie " + params.inspect)
    @movie = Movie.find(id)
  end

  def new
  end

 def update
    #debugger
    logger.debug("MoviesController create movie...........>#{params.inspect}")
    @movie = Movie.find params[:id]
    @movie.update_attributes!(movie_params)
    flash[:notice] = "Movie \"#{@movie.title}\" was successfully updated."
    #redirect_to movie_path(@movie)
    respond_to do |format|
     format.html {redirect_to movie_path(@movie)}
     format.xml {render xml: @movie.to_xml}
    end
  end


  # This action would delete a movie
  def destroy
    id = params[:id]
    logger.debug("attempting to delete movie " + id)
    @movie = Movie.find(id)
    
    #only delete the file if it actually exist
    if defined? @movie
      logger.debug("movie exists. deleting it. ")
      Movie.delete(@movie)
    end

    #the delete requests are idempotent, so if we didn't find it, don't fail, just continue as if it was deleted

    #after deleting the record return to the index view and pass a message of the deleted movie
    flash[:notice] = "Movie '#{@movie.title}' deleted"
    redirect_to movies_path
  end

  def create
    #debugger
    logger.debug("MoviesController create movie...........>#{params.inspect}")
    @movie = Movie.new(movie_params)
    begin
  	@movie.save!
        flash[:notice] = "Movie '#{@movie.title}' created successfully."
        logger.debug("Reached here")
        redirect_to movies_path
	rescue ActiveRecord::RecordInvalid => e
         flash[:notice] = "Movie '#{@movie.title}' failed : #{e.message}"
	 redirect_to new_movie_path
     end
  end
 
 private
  def movie_params
    params.require(:movie).permit(:title, :rating, :description, :release_date, :imdblink)
  end

end
